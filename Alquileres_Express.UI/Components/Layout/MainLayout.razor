@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Authentication
@using Alquileres_Express.UI.Components.Pages;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.WebUtilities
@inject Alquileres_Express.Aplicacion.CasosDeUso.CasoDeUsoBuscarClientePorCorreo CasoDeUsoBuscarClientePorCorreo
@inject Alquileres_Express.Aplicacion.CasosDeUso.CasoDeUsoBuscarPersonalPorCorreo CasoDeUsoBuscarPersonalPorCorreo


@{
    var currentRoute = Nav.ToBaseRelativePath(Nav.Uri);
}
<!-- Barra superior con borde blanco -->
<div class="top-bar d-flex justify-content-between align-items-center border-bottom border-white px-3"
    style="height: 50px;">

    <!-- Logo a la izquierda -->
    <div class="d-flex align-items-center">
        <img src="images/logo.png" alt="logo" style="height: 30px;" class="me-2" />
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Alquiler Express
            </NavLink>
        </div>
    </div>

    <!-- Botones a la derecha   /logout -->
    <div class="d-flex align-items-center gap-2">
        <AuthorizeView>
            <Authorized>
                @if ((personal != null) && !string.Equals(currentRoute, "Herramientas",
                                StringComparison.OrdinalIgnoreCase))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link d-flex align-items-center gap-2" href="/Herramientas">
                            <i class="bi bi-tools" style="font-size: 1.2rem;"></i> 🛠️Herramientas
                        </NavLink>
                    </div>
                }
                @if (!string.Equals(currentRoute, "Perfil", StringComparison.OrdinalIgnoreCase))
                {
                    @if (rol == "Cliente")
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/Perfil">
                                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span><i
                                    class="fas fa-user"></i>@(cliente?.Nombre ?? "Perfil")

                            </NavLink>
                        </div>
                    }
                    else
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/Perfil">
                                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span><i
                                    class="fas fa-user"></i>@(personal?.Nombre ?? "Perfil")
                            </NavLink>
                        </div>
                    }
                }
            </Authorized>
            <NotAuthorized>
                @if (!string.Equals(currentRoute, "login", StringComparison.OrdinalIgnoreCase))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Login">
                            <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Iniciar sesion
                        </NavLink>
                    </div>
                }
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/logout">
                        <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Cerrar sesión
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/registrarse">
                        <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Registrarse
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>


        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Contactos">
                <button class="btn btn-sm Contactanos">Contactanos</button>
            </NavLink>
        </div>
    </div>
</div>
@if (rol == null || rol == "Cliente")
{
    <main class="@(currentRoute == "Contactos" ? "main-content-contactos" : "main-content") text-white py-4 px-3">
        @Body
    </main>
}
else
{
    <AuthorizeView Roles="Gerente,Empleado">
        <Authorized>
            <main
                class="@(currentRoute == "Contactos" ? "main-content-contactos" : "main-content red") text-white py-4 px-3">
                @Body
            </main>
        </Authorized>
    </AuthorizeView>
}



@code {
    private string currentRoute => Nav.ToBaseRelativePath(Nav.Uri);

    String correo { get; set; }
    String rol { get; set; }
    Cliente cliente { get; set; }
    Personal personal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            correo = user.Identity.Name;
            rol = user.FindFirst(ClaimTypes.Role)?.Value;
            cliente = CasoDeUsoBuscarClientePorCorreo.Ejecutar(correo);
            personal = CasoDeUsoBuscarPersonalPorCorreo.Ejecutar(correo);
        }
    }

}
