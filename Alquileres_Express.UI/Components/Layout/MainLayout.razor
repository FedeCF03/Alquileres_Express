@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Authentication
@using Alquileres_Express.UI.Components.Pages;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.WebUtilities
@inject Alquileres_Express.Aplicacion.CasosDeUso.CasoDeUsoBuscarClientePorCorreo CasoDeUsoBuscarClientePorCorreo
@inject Alquileres_Express.Aplicacion.CasosDeUso.CasoDeUsoBuscarPersonalPorCorreo CasoDeUsoBuscarPersonalPorCorreo

@{
    var currentRoute = Nav.ToBaseRelativePath(Nav.Uri);
}
<!-- Barra superior con borde blanco -->
<div class="top-bar d-flex justify-content-between align-items-center border-bottom border-white px-3"
    style="height: 50px;">

    <!-- Logo a la izquierda -->
    <div class="d-flex align-items-center">
        <img src="images/logo.png" alt="logo" style="height: 30px;" class="me-2" />
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Alquiler Express
            </NavLink>
        </div>
    </div>

    <!-- Botones a la derecha   /logout -->
    <div class="d-flex align-items-center gap-2">
        <AuthorizeView>
            <Authorized>
                @if (personal != null)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Herramientas">
                            <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Herramientas
                        </NavLink>
                    </div>
                }
                @if (!string.Equals(currentRoute, "Perfil", StringComparison.OrdinalIgnoreCase))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Perfil">
                            <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Perfil
                        </NavLink>
                    </div>
                }
            </Authorized>
            
            <NotAuthorized>
                @if (!string.Equals(currentRoute, "login", StringComparison.OrdinalIgnoreCase))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Login">
                            <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Iniciar sesion
                        </NavLink>
                    </div>
                }
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized Context="authState">
                @{
                    var user = authState.User;
                }
                @if (user.IsInRole("Empleado") || user.IsInRole("Gerente") || user.IsInRole("Administrativo"))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/listadoUsuario">
                            <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Listado Usuarios
                        </NavLink>
                    </div>
                }
            </Authorized>
        </AuthorizeView>
    
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                <button class="btn btn-sm btn-primary" @onclick="Logout">Cerrar sesión</button>

                </div>
            </Authorized>
            <NotAuthorized>
                @if ((!string.Equals(currentRoute, "usuario", StringComparison.OrdinalIgnoreCase)) &&
                                (!string.Equals(currentRoute, "login", StringComparison.OrdinalIgnoreCase)))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/usuario">
                            <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Registrarse
                        </NavLink>
                    </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/listadoUsuario">
                        <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Listado Usuarios
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>


        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Contactos">
                <button class="btn btn-sm Contactanos">Contactanos</button>
            </NavLink>
        </div>
    </div>
</div>
<!-- Contenido principal con fondo personalizado -->

<main
    class="@(currentRoute == "Contactos" ? "main-content-contactos" : @currentRoute == "Perfil" ? "main-content-Perfil" : "main-content") text-white py-4 px-3">
    @Body
</main>

@code {
    private string currentRoute => Nav.ToBaseRelativePath(Nav.Uri);

    String correo { get; set; }
    String rol { get; set; }
    Cliente cliente { get; set; }
    Personal personal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            correo = user.Identity.Name;
            rol = user.FindFirst(ClaimTypes.Role)?.Value;
            cliente = CasoDeUsoBuscarClientePorCorreo.Ejecutar(correo);
            personal = CasoDeUsoBuscarPersonalPorCorreo.Ejecutar(correo);
        }
    }
    private void Logout()
    {
     Nav.NavigateTo("/logout", true);
    }
}
