@page "/login"
@inject NavigationManager Nav
@inject IHttpContextAccessor HttpContextAccessor
@using System.Security.Claims
@using Alquileres_Express.Aplicacion
@using Alquileres_Express.Aplicacion.Entidades
@using Alquileres_Express.Aplicacion.Interfaces
@using Alquileres_Express.Aplicacion.Servicios
@using Alquileres_Express.Repositorios
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication.Cookies
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Mail
@inject NavigationManager NavigationManager
@inject IRepositorioCliente RepositorioCliente
@inject IRepositorioPersonal RepositorioPersonal

<div class="login-container">
    <div class="login-card">
        <h3 class="login-title">Iniciar sesión</h3>

        <EditForm Model="@usuario" OnValidSubmit="IniciarSesion" FormName="loginForm">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="username">Email</label>
                <InputText id="username" @bind-Value="usuario.Nombre" class="form-control"
                    placeholder="Ingrese su usuario" />
            </div>

            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText id="password" @bind-Value="usuario.Contraseña" type="password" class="form-control"
                    placeholder="Ingrese su contraseña" />
            </div>
            <div class="login-links">
                <a href="/forgot-password" class="link-secondary">¿Olvidaste tu contraseña?</a>
                <a href="/register" class="link-secondary">Registrarse</a>
            </div>

            <button type="submit" class="btn-primary">Ingresar</button>
        </EditForm>
    </div>
</div>
@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }
    [SupplyParameterFromForm]
    private Usuario usuario { get; set; }


    private async Task IniciarSesion()
    {
        usuario = RepositorioCliente.ObtenerClientePorMail(usuario.Correo) ??
        RepositorioPersonal.ObtenerPersonalPorMail(usuario.Correo) ?? null;
        if (usuario == null)
        {
            // Mostrar mensaje de error
            return;
        }
        if (usuario.Rol == RolUsuario.Gerente)
        {
            //ServicioEnviarEmail.EnviarEmailDobleAutenticacion(usuario.Correo);
        }
        var claims = new List<Claim> {
new Claim(ClaimTypes.Name, usuario.Correo),
new Claim(ClaimTypes.Role, usuario.Rol.ToString())
};
        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await HttpContext.SignInAsync(principal);
        NavigationManager.NavigateTo("/");

    }

    public class LoginModel
    {
        public string Nombre { get; set; }
        public string Contraseña { get; set; }
        public RolUsuario Rol { get; set; }
        public string Correo { get; set; }
    }



}