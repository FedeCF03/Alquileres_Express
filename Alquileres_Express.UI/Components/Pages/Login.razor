@page "/login"
@inject IHttpContextAccessor HttpContextAccessor
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication.Cookies

@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Mail
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="login-card">
        <h3 class="login-title">Iniciar Sesión</h3>

        <EditForm Model="@cliente" OnValidSubmit="IniciarSesion" FormName="loginForm">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="username">Email</label>
                <InputText id="username" @bind-Value="cliente.Correo" class="form-control"
                    placeholder="Ingrese su usuario" />
            </div>

            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText id="password" @bind-Value="cliente.Contraseña" type="password" class="form-control"
                    placeholder="Ingrese su contraseña" />
            </div>
            <div class="login-links">
                <a href="/forgot-password" class="link-secondary">¿Olvidaste tu contraseña?</a>
                <a href="/register" class="link-secondary">Regístrarse</a>
            </div>

            <button type="submit" class="btn-primary">Ingresar</button>
        </EditForm>
    </div>
</div>
@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }
    [SupplyParameterFromForm]
    private LoginModel cliente { get; set; } = new();


    private async Task IniciarSesion()
    {

        cliente.Rol = RolUsuario.Gerente;
        if (cliente.Rol == RolUsuario.Gerente)
        {
            ServicioEnviarEmail.EnviarEmailDobleAutenticacion(cliente.Correo);
        }
        var claims = new List<Claim> {
new Claim(ClaimTypes.Name, cliente.Correo),
new Claim(ClaimTypes.Role, cliente.Rol.ToString())
};
        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await HttpContext.SignInAsync(principal);
        NavigationManager.NavigateTo("/");

    }

    public class LoginModel
    {
        public string Nombre { get; set; }
        public string Contraseña { get; set; }
        public RolUsuario Rol { get; set; }
        public string Correo { get; set; }
    }



}