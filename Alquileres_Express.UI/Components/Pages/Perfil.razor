@page "/Perfil"
@using BlazorDateRangePicker
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject CasoDeUsoBuscarClientePorCorreo CasoDeUsoBuscarClientePorCorreo
@inject CasoDeUsoBuscarPersonalPorCorreo CasoDeUsoBuscarPersonalPorCorreo
@attribute [Authorize]
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

@if (cliente != null)
{
    <div class="perfil-contenedor">
        <h2 class="titulo">Hola @cliente?.Nombre</h2>

        <div class="perfil-card">
            <div><strong>Apellido:</strong> @cliente.Apellido</div>
            <div><strong>DNI:</strong> @cliente.Dni</div>
            <div><strong>Correo:</strong> @cliente.Correo</div>
            <div><strong>Dirección:</strong> @cliente.Direccion</div>
            <div><strong>Fecha de Nacimiento:</strong> @cliente.FechaNacimiento.ToString("dd/MM/yyyy")</div>
            <div><strong>Rol:</strong> @cliente.Rol</div>
            <div class="botones">
                <button class="btn-navlink" @onclick="@(() => NavigationManager.NavigateTo("/editar-perfil"))">
                    <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Editar perfil
                </button>
                @* <button class="btn-editar" @onclick="CambiarContraseña">Cambiar contraseña</button>*@
                <button class="btn btn-dark" @onclick="@(() => NavigationManager.NavigateTo("/mis-alquileres"))">Mis alquileres</button>
            </div>
        </div>
    </div>
}

@if (personal != null)
{
    <div class="perfil-contenedor">
        <h2 class="titulo">Hola @personal?.Nombre</h2>

        <div class="perfil-card">
            <div><strong>Apellido:</strong> @personal.Apellido</div>
            <div><strong>DNI:</strong> @personal.Dni</div>
            <div><strong>Correo:</strong> @personal.Correo</div>
            <div><strong>Dirección:</strong> @personal.Direccion</div>
            <div><strong>Fecha de Nacimiento:</strong> @personal.FechaNacimiento.ToString("dd/MM/yyyy")</div>
            <div><strong>Rol:</strong> @personal.Rol</div>
            <div class="botones">
                <NavLink class="nav-link" href="/editar-perfil">
                    <span class="bi bi-person-plus-fill" aria-hidden="true"></span> Editar perfil
                </NavLink>
                @* <button class="btn-editar" @onclick="CambiarContraseña">Cambiar contraseña</button> *@
            </div>
        </div>
    </div>
}

@code {
    String? correo { get; set; }
    String? rol { get; set; }
    private Cliente cliente;
    private Personal personal;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            correo = user.Identity.Name;
            rol = user.FindFirst(ClaimTypes.Role)?.Value;
            cliente = CasoDeUsoBuscarClientePorCorreo.Ejecutar(correo);
            personal = CasoDeUsoBuscarPersonalPorCorreo.Ejecutar(correo);
        }
    }
    private void EditarPerfil()
    {
        //algo o es un boton despues vemos
    }

    private void CambiarContraseña()
    {
        //algo o es un boton despues vemos
    }

}