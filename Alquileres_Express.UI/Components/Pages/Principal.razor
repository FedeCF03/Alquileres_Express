@page "/"
@inject IRepositorioFoto repositorioFotos
@inject FiltroDeInmueblesService FiltroDeInmueblesService
@inject CasoDeUsoListarInmuebles casoDeUsoListarInmuebles
@using Alquileres_Express.Aplicacion.Servicios;
@rendermode InteractiveServer
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.WebUtilities

<PageTitle>Inmuebles</PageTitle>

<PageTitle>Inmuebles</PageTitle>

<h3>Mensaje: @Mensaje</h3>


<div class="contenedor-principal">
    <!-- COLUMNA IZQUIERDA: IMÁGENES -->
    <div class="columna-imagenes">
        <h2>Propiedades</h2>
        @if (inmuebles == null || !inmuebles.Any())
        {
            <p>No hay inmuebles disponibles.</p>
        }
        else
        {
            <div class="galeria-imagenes">
                @foreach (var inmueble in inmuebles)
                {
                    <NavLink class="imagen-link" href="@($"/inmueble/{inmueble.Id}")">
                        <img src="@inmueble.Fotos[0].Url" alt="Foto propiedad" class="foto" />
                    </NavLink>
                }
            </div>
        }
    </div>

    <!-- COLUMNA DERECHA: FILTROS -->
    <div class="columna-filtros">
        <h2>Ordenar</h2>
        <select>
            <option>Localidad</option>
        </select>
        <select>
            <option>Precio</option>
        </select>
        <select>
            <option>Cantidad de personas</option>
        </select>
        <select>
            <option>Mejor valoradas</option>
        </select>
    </div>
</div>


@code
{
    [SupplyParameterFromQuery]
    private string? Mensaje { get; set; }

    private List<Inmueble> inmuebles = new List<Inmueble>();
    private Filtro<Inmueble> filtroPrecio = new Filtro<Inmueble>();
    protected override void OnInitialized()
    {
        inmuebles = casoDeUsoListarInmuebles.Ejecutar();

    }
}
