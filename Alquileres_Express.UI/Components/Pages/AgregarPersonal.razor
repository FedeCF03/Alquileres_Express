@page "/agregar-personal"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication.Cookies
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize(Roles = "Administrador,Gerente")]
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc
@inject CasoDeUsoAltaPersonal casoDeUsoAltaPersonal
@inject ValidadorUsuario validadorUsuario
@rendermode InteractiveServer
@using BlazorDateRangePicker


<div class="login-container">
    <div class="login-card">
        <h3 class="login-title">Agregar Personal</h3>

        <div class="mb-2">
        <label>Nombre</label>
        <input @bind="nuevoPersonal.Nombre" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Apellido</label>
        <input @bind="nuevoPersonal.Apellido" class="form-control" />
    </div>

    <div class="mb-2">
        <label>DNI</label>
        <input type="number" @bind="nuevoPersonal.Dni" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Correo</label>
        <input @bind="nuevoPersonal.Correo" class="form-control" />
    </div>

    
        <div class="mb-2">
            <label>Contrase침a</label>
            <input @bind="nuevoPersonal.Contrase침a" type="password" class="form-control" />
        </div>

    <div class="mb-2">
        <label>Direcci칩n</label>
        <input @bind="nuevoPersonal.Direccion" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Fecha de Nacimiento</label>
        <div class="d-flex">
           <DateRangePicker @bind-EndDate="selectedDate" 
           MinDate="minDate"
           MaxDate ="DateTime.Now"
           SingleDatePicker="true"/>
        </div>
    </div>
</div>
    </div>
@foreach (var error in errores)
{
    <div class="alert alert-danger mt-3" role="alert">@error</div>
}

<div class="alert alert-success mt-3" role="alert"
    style="display: @(string.IsNullOrEmpty(mensajeExito) ? "none" : "block")">
    @mensajeExito
</div>

<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>


@code {
    [SupplyParameterFromForm]
    private Personal nuevoPersonal { get; set; } = new();
    private string mensajeError = string.Empty;
    private string mensajeExito = string.Empty;
    private DateTimeOffset? selectedDate;
    private DateTime minDate = new DateTime(DateTime.Now.Year - 100, 1, 1);
    private List<string> errores = [];
    private void Aceptar()
    {
        if (selectedDate == null)
        {
            errores = validadorUsuario.Ejecutar(nuevoPersonal);
            errores.Add("Por favor, seleccion치 una fecha de nacimiento.");
            return;
        }

        try
        {
            nuevoPersonal.FechaNacimiento = selectedDate.Value.DateTime;
            if (!casoDeUsoAltaPersonal.Ejecutar(nuevoPersonal, out errores))
                return;
            errores.Clear();
            nuevoPersonal = new();
            selectedDate = null;
            mensajeExito = "Personal agregado correctamente.";
        }
        catch (Exception ex)
        {
            errores.Add(ex.Message);
        }

    }
}