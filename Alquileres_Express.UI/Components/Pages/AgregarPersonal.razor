@page "/agregar-personal"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication.Cookies
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize(Roles = "Administrador,Gerente")]
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc
@inject CasoDeUsoAltaPersonal casoDeUsoAltaPersonal
@rendermode InteractiveServer
@using BlazorDateRangePicker


<div class="login-container">
    <div class="login-card">
        <h3 class="login-title">Agregar Personal</h3>

        <div class="mb-2">
        <label>Nombre</label>
        <input @bind="nuevoPersonal.Nombre" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Apellido</label>
        <input @bind="nuevoPersonal.Apellido" class="form-control" />
    </div>

    <div class="mb-2">
        <label>DNI</label>
        <input type="number" @bind="nuevoPersonal.Dni" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Correo</label>
        <input @bind="nuevoPersonal.Correo" class="form-control" />
    </div>

    <AuthorizeView>
        <NotAuthorized>
            <div class="mb-2">
                <label>Contraseña</label>
                <input @bind="nuevoPersonal.Contraseña" type="password" class="form-control" />
            </div>
        </NotAuthorized>
    </AuthorizeView>

    <div class="mb-2">
        <label>Dirección</label>
        <input @bind="nuevoPersonal.Direccion" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Fecha de Nacimiento</label>
        <div class="d-flex">
           <DateRangePicker @bind-EndDate="selectedDate" 
           MinDate="minDate"
           MaxDate ="DateTime.Now"
           SingleDatePicker="true"/>
        </div>
    </div>
</div>
    </div>
<div class="alert alert-danger mt-3" role="alert"
    style="display: @(string.IsNullOrEmpty(mensajeError) ? "none" : "block")">
    @mensajeError

</div>

<div class="alert alert-success mt-3" role="alert"
    style="display: @(string.IsNullOrEmpty(mensajeExito) ? "none" : "block")">
    @mensajeExito
</div>

@code {
    [SupplyParameterFromForm]
    private Personal nuevoPersonal { get; set; } = new();
    private string mensajeError = string.Empty;
    private string mensajeExito = string.Empty;
    private DateTimeOffset? selectedDate;
    private DateTime minDate = new DateTime(DateTime.Now.Year - 100, 1, 1);
    private int? selectedDay;
    private int? selectedMonth;
    private int? selectedYear;
    private void GuardarPersonal()
    {
        if (selectedDay == null || selectedMonth == null || selectedYear == null)
        {
            mensajeError = "Por favor, seleccioná día, mes y año de nacimiento.";
            return;
        }

        try
        {
            nuevoPersonal.FechaNacimiento = new DateTime(
            selectedYear.Value,
            selectedMonth.Value,
            selectedDay.Value
            );
            casoDeUsoAltaPersonal.Ejecutar(nuevoPersonal);
            mensajeExito = "Personal agregado correctamente.";
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
        }

    }
}
